{"uid":"1d42c87f31218399","name":"test_logging_in","fullName":"test_conduit.test_conduit.TestConduit#test_logging_in","historyId":"a236c6044f166fdeb963af96482bfc7c","time":{"start":1656406548435,"stop":1656406551753,"duration":3318},"status":"failed","statusMessage":"AssertionError: assert 'nori_teszt' in 'conduit\\nHome\\nSign in\\nSign up'\n +  where 'conduit\\nHome\\nSign in\\nSign up' = <selenium.webdriver.remote.webelement.WebElement (session=\"1db42786e501cd80d6dd9ac7ed9b833f\", element=\"39e50e33-386d-4649-936d-f44c995edbc3\")>.text","statusTrace":"self = <test_conduit.TestConduit object at 0x7f24564fd3a0>\n\n    def test_logging_in(self):\n        signin_btn = self.browser.find_element_by_xpath('//a[@href=\"#/login\"]')\n        signin_btn.click()\n        email_input = self.browser.find_element_by_xpath('//input[@type=\"text\"]')\n        password_input = self.browser.find_element_by_xpath('//input[@type=\"password\"]')\n        login_btn = self.browser.find_element_by_css_selector('button[class=\"btn btn-lg btn-primary pull-xs-right\"]')\n        email_input.clear()\n        password_input.clear()\n        email_input.send_keys(sample_user[\"email\"])\n        password_input.send_keys(sample_user[\"password\"])\n        time.sleep(1)\n        login_btn.click()\n        time.sleep(2)\n        nav_menu = self.browser.find_element_by_xpath('//nav')\n>       assert sample_user[\"name\"] in nav_menu.text\nE       assert 'nori_teszt' in 'conduit\\nHome\\nSign in\\nSign up'\nE        +  where 'conduit\\nHome\\nSign in\\nSign up' = <selenium.webdriver.remote.webelement.WebElement (session=\"1db42786e501cd80d6dd9ac7ed9b833f\", element=\"39e50e33-386d-4649-936d-f44c995edbc3\")>.text\n\ntest_conduit/test_conduit.py:60: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1656406546816,"stop":1656406548434,"duration":1618},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'nori_teszt' in 'conduit\\nHome\\nSign in\\nSign up'\n +  where 'conduit\\nHome\\nSign in\\nSign up' = <selenium.webdriver.remote.webelement.WebElement (session=\"1db42786e501cd80d6dd9ac7ed9b833f\", element=\"39e50e33-386d-4649-936d-f44c995edbc3\")>.text","statusTrace":"self = <test_conduit.TestConduit object at 0x7f24564fd3a0>\n\n    def test_logging_in(self):\n        signin_btn = self.browser.find_element_by_xpath('//a[@href=\"#/login\"]')\n        signin_btn.click()\n        email_input = self.browser.find_element_by_xpath('//input[@type=\"text\"]')\n        password_input = self.browser.find_element_by_xpath('//input[@type=\"password\"]')\n        login_btn = self.browser.find_element_by_css_selector('button[class=\"btn btn-lg btn-primary pull-xs-right\"]')\n        email_input.clear()\n        password_input.clear()\n        email_input.send_keys(sample_user[\"email\"])\n        password_input.send_keys(sample_user[\"password\"])\n        time.sleep(1)\n        login_btn.click()\n        time.sleep(2)\n        nav_menu = self.browser.find_element_by_xpath('//nav')\n>       assert sample_user[\"name\"] in nav_menu.text\nE       assert 'nori_teszt' in 'conduit\\nHome\\nSign in\\nSign up'\nE        +  where 'conduit\\nHome\\nSign in\\nSign up' = <selenium.webdriver.remote.webelement.WebElement (session=\"1db42786e501cd80d6dd9ac7ed9b833f\", element=\"39e50e33-386d-4649-936d-f44c995edbc3\")>.text\n\ntest_conduit/test_conduit.py:60: AssertionError","steps":[],"attachments":[{"uid":"7da036754561ea7c","name":"log","source":"7da036754561ea7c.txt","type":"text/plain","size":338},{"uid":"dfeeaf94c696be52","name":"stdout","source":"dfeeaf94c696be52.txt","type":"text/plain","size":1},{"uid":"5708e5aded9aa7a","name":"stderr","source":"5708e5aded9aa7a.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1656406551810,"stop":1656406551867,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_conduit"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az33-65"},{"name":"thread","value":"3212-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"feda98a9f2b020ee","status":"passed","time":{"start":1656248638744,"stop":1656248643137,"duration":4393}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1d42c87f31218399.json","parameterValues":[]}